<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.frejdh.util</groupId>
		<artifactId>library-master-pom</artifactId>
		<version>1.0.0</version>
	</parent>

	<groupId>com.frejdh.util.common</groupId>
	<artifactId>annotations</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<description>Enable the annotation processor before usage</description>
	<packaging>jar</packaging>

	<properties>
		<maven.compiler.target>1.8</maven.compiler.target>
		<maven.compiler.source>1.8</maven.compiler.source>

		<!-- Deployment for artifacts -->
		<github.repository.owner>Frejdh</github.repository.owner>
		<github.repository.name>mvn-lib-annotations</github.repository.name>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.google.auto.service</groupId>
			<artifactId>auto-service</artifactId>
			<version>1.0-rc7</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
					<generatedSourcesDirectory>${project.build.directory}/generated-sources/</generatedSourcesDirectory>
					<annotationProcessors>
						<annotationProcessor>com.frejdh.util.common.annotations.processors.WarningProcessor</annotationProcessor>
						<annotationProcessor>com.frejdh.util.common.annotations.processors.DefaultBooleanProcessor</annotationProcessor>
					</annotationProcessors>
				</configuration>
			</plugin>

			<plugin> <!-- Optional. Push artifact and files to github upon mvn deploy -->
				<inherited>false</inherited>
				<groupId>com.github.github</groupId>
				<artifactId>site-maven-plugin</artifactId>
				<version>0.11</version>

				<executions> <!-- run site-maven-plugin's 'site' target as part of the build's normal 'deploy' phase -->
					<execution> <!-- Package and push .jar file as a release, available for direct download on github -->
						<id>github-site-to-artifact</id>
						<goals>
							<goal>site</goal>
						</goals>
						<phase>deploy</phase>
						<configuration>
							<message>Maven artifact for ${project.version}</message> <!-- Git commit message -->
							<noJekyll>true</noJekyll><!-- Disable webpage processing -->
							<outputDirectory>${project.build.directory}/${github.deploy.branch}</outputDirectory> <!-- Matches distribution management repository url above -->
							<branch>${github.ref.release.jar}/${project.version}</branch> <!-- Remote branch name (maven repository) -->
							<includes>
								<include>**/*</include>
							</includes>
							<repositoryOwner>${github.repository.owner}</repositoryOwner> <!-- Organization or username  -->
							<repositoryName>${github.repository.name}</repositoryName> <!-- Github repo name -->
						</configuration>
					</execution>

					<execution> <!-- Upload files to a specific branch used as a maven repository -->
						<id>github-site-to-branch</id>
						<goals>
							<goal>site</goal>
						</goals>
						<phase>deploy</phase>
						<configuration>
							<message>Maven artifact for ${project.version}</message> <!-- Git commit message -->
							<noJekyll>true</noJekyll><!-- Disable webpage processing -->
							<outputDirectory>${project.build.directory}/${github.deploy.branch}</outputDirectory> <!-- Matches distribution management repository url above -->
							<branch>${github.ref.release.branch}/${github.deploy.branch}</branch> <!-- Remote branch name (maven repository) -->
							<includes>
								<include>**/*</include>
							</includes>
							<repositoryOwner>${github.repository.owner}</repositoryOwner> <!-- Organization or username  -->
							<repositoryName>${github.repository.name}</repositoryName> <!-- Github repo name -->
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<repositories>
		<repository>
			<id>library-master-pom</id>
			<url>https://raw.github.com/Frejdh/mvn-lib-master/mvn-repo/</url>
		</repository>
	</repositories>

</project>